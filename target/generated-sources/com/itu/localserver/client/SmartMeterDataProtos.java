// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/main/resources/smart_meter_data.proto

package com.itu.localserver.client;

public final class SmartMeterDataProtos {
  private SmartMeterDataProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface SmartMeterOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SmartMeter)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 id = 1;</code>
     */
    boolean hasId();
    /**
     * <code>optional int32 id = 1;</code>
     */
    int getId();

    /**
     * <code>optional int32 sm_index = 2;</code>
     */
    boolean hasSmIndex();
    /**
     * <code>optional int32 sm_index = 2;</code>
     */
    int getSmIndex();

    /**
     * <code>optional string ieeeAddress = 3;</code>
     */
    boolean hasIeeeAddress();
    /**
     * <code>optional string ieeeAddress = 3;</code>
     */
    java.lang.String getIeeeAddress();
    /**
     * <code>optional string ieeeAddress = 3;</code>
     */
    com.google.protobuf.ByteString
        getIeeeAddressBytes();

    /**
     * <code>optional string timestamp = 4;</code>
     */
    boolean hasTimestamp();
    /**
     * <code>optional string timestamp = 4;</code>
     */
    java.lang.String getTimestamp();
    /**
     * <code>optional string timestamp = 4;</code>
     */
    com.google.protobuf.ByteString
        getTimestampBytes();

    /**
     * <code>optional int32 rms_V1 = 5;</code>
     */
    boolean hasRmsV1();
    /**
     * <code>optional int32 rms_V1 = 5;</code>
     */
    int getRmsV1();

    /**
     * <code>optional float rms_I1 = 6;</code>
     */
    boolean hasRmsI1();
    /**
     * <code>optional float rms_I1 = 6;</code>
     */
    float getRmsI1();

    /**
     * <code>optional int32 rms_V2 = 7;</code>
     */
    boolean hasRmsV2();
    /**
     * <code>optional int32 rms_V2 = 7;</code>
     */
    int getRmsV2();

    /**
     * <code>optional float rms_I2 = 8;</code>
     */
    boolean hasRmsI2();
    /**
     * <code>optional float rms_I2 = 8;</code>
     */
    float getRmsI2();

    /**
     * <code>optional int32 rms_V3 = 9;</code>
     */
    boolean hasRmsV3();
    /**
     * <code>optional int32 rms_V3 = 9;</code>
     */
    int getRmsV3();

    /**
     * <code>optional float rms_I3 = 10;</code>
     */
    boolean hasRmsI3();
    /**
     * <code>optional float rms_I3 = 10;</code>
     */
    float getRmsI3();

    /**
     * <code>optional float power = 11;</code>
     */
    boolean hasPower();
    /**
     * <code>optional float power = 11;</code>
     */
    float getPower();

    /**
     * <code>optional float accumulated_energy = 12;</code>
     */
    boolean hasAccumulatedEnergy();
    /**
     * <code>optional float accumulated_energy = 12;</code>
     */
    float getAccumulatedEnergy();

    /**
     * <code>optional int32 status = 13;</code>
     */
    boolean hasStatus();
    /**
     * <code>optional int32 status = 13;</code>
     */
    int getStatus();

    /**
     * <code>optional int32 theta_1 = 17;</code>
     */
    boolean hasTheta1();
    /**
     * <code>optional int32 theta_1 = 17;</code>
     */
    int getTheta1();

    /**
     * <code>optional int32 mag_V1 = 18;</code>
     */
    boolean hasMagV1();
    /**
     * <code>optional int32 mag_V1 = 18;</code>
     */
    int getMagV1();

    /**
     * <code>optional int32 mag_I1 = 19;</code>
     */
    boolean hasMagI1();
    /**
     * <code>optional int32 mag_I1 = 19;</code>
     */
    int getMagI1();

    /**
     * <code>optional int32 theta_2 = 20;</code>
     */
    boolean hasTheta2();
    /**
     * <code>optional int32 theta_2 = 20;</code>
     */
    int getTheta2();

    /**
     * <code>optional int32 mag_V2 = 21;</code>
     */
    boolean hasMagV2();
    /**
     * <code>optional int32 mag_V2 = 21;</code>
     */
    int getMagV2();

    /**
     * <code>optional int32 mag_I2 = 22;</code>
     */
    boolean hasMagI2();
    /**
     * <code>optional int32 mag_I2 = 22;</code>
     */
    int getMagI2();

    /**
     * <code>optional int32 theta_3 = 23;</code>
     */
    boolean hasTheta3();
    /**
     * <code>optional int32 theta_3 = 23;</code>
     */
    int getTheta3();

    /**
     * <code>optional int32 mag_V3 = 24;</code>
     */
    boolean hasMagV3();
    /**
     * <code>optional int32 mag_V3 = 24;</code>
     */
    int getMagV3();

    /**
     * <code>optional int32 mag_I3 = 25;</code>
     */
    boolean hasMagI3();
    /**
     * <code>optional int32 mag_I3 = 25;</code>
     */
    int getMagI3();

    /**
     * <code>optional int32 sm_V = 26;</code>
     */
    boolean hasSmV();
    /**
     * <code>optional int32 sm_V = 26;</code>
     */
    int getSmV();

    /**
     * <code>optional int32 sm_I = 27;</code>
     */
    boolean hasSmI();
    /**
     * <code>optional int32 sm_I = 27;</code>
     */
    int getSmI();
  }
  /**
   * Protobuf type {@code SmartMeter}
   */
  public static final class SmartMeter extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:SmartMeter)
      SmartMeterOrBuilder {
    // Use SmartMeter.newBuilder() to construct.
    private SmartMeter(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SmartMeter(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SmartMeter defaultInstance;
    public static SmartMeter getDefaultInstance() {
      return defaultInstance;
    }

    public SmartMeter getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SmartMeter(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              smIndex_ = input.readInt32();
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              ieeeAddress_ = bs;
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              timestamp_ = bs;
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              rmsV1_ = input.readInt32();
              break;
            }
            case 53: {
              bitField0_ |= 0x00000020;
              rmsI1_ = input.readFloat();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              rmsV2_ = input.readInt32();
              break;
            }
            case 69: {
              bitField0_ |= 0x00000080;
              rmsI2_ = input.readFloat();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              rmsV3_ = input.readInt32();
              break;
            }
            case 85: {
              bitField0_ |= 0x00000200;
              rmsI3_ = input.readFloat();
              break;
            }
            case 93: {
              bitField0_ |= 0x00000400;
              power_ = input.readFloat();
              break;
            }
            case 101: {
              bitField0_ |= 0x00000800;
              accumulatedEnergy_ = input.readFloat();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              status_ = input.readInt32();
              break;
            }
            case 136: {
              bitField0_ |= 0x00002000;
              theta1_ = input.readInt32();
              break;
            }
            case 144: {
              bitField0_ |= 0x00004000;
              magV1_ = input.readInt32();
              break;
            }
            case 152: {
              bitField0_ |= 0x00008000;
              magI1_ = input.readInt32();
              break;
            }
            case 160: {
              bitField0_ |= 0x00010000;
              theta2_ = input.readInt32();
              break;
            }
            case 168: {
              bitField0_ |= 0x00020000;
              magV2_ = input.readInt32();
              break;
            }
            case 176: {
              bitField0_ |= 0x00040000;
              magI2_ = input.readInt32();
              break;
            }
            case 184: {
              bitField0_ |= 0x00080000;
              theta3_ = input.readInt32();
              break;
            }
            case 192: {
              bitField0_ |= 0x00100000;
              magV3_ = input.readInt32();
              break;
            }
            case 200: {
              bitField0_ |= 0x00200000;
              magI3_ = input.readInt32();
              break;
            }
            case 208: {
              bitField0_ |= 0x00400000;
              smV_ = input.readInt32();
              break;
            }
            case 216: {
              bitField0_ |= 0x00800000;
              smI_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.itu.localserver.client.SmartMeterDataProtos.internal_static_SmartMeter_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.itu.localserver.client.SmartMeterDataProtos.internal_static_SmartMeter_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.itu.localserver.client.SmartMeterDataProtos.SmartMeter.class, com.itu.localserver.client.SmartMeterDataProtos.SmartMeter.Builder.class);
    }

    public static com.google.protobuf.Parser<SmartMeter> PARSER =
        new com.google.protobuf.AbstractParser<SmartMeter>() {
      public SmartMeter parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SmartMeter(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SmartMeter> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>optional int32 id = 1;</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 id = 1;</code>
     */
    public int getId() {
      return id_;
    }

    public static final int SM_INDEX_FIELD_NUMBER = 2;
    private int smIndex_;
    /**
     * <code>optional int32 sm_index = 2;</code>
     */
    public boolean hasSmIndex() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 sm_index = 2;</code>
     */
    public int getSmIndex() {
      return smIndex_;
    }

    public static final int IEEEADDRESS_FIELD_NUMBER = 3;
    private java.lang.Object ieeeAddress_;
    /**
     * <code>optional string ieeeAddress = 3;</code>
     */
    public boolean hasIeeeAddress() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string ieeeAddress = 3;</code>
     */
    public java.lang.String getIeeeAddress() {
      java.lang.Object ref = ieeeAddress_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          ieeeAddress_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string ieeeAddress = 3;</code>
     */
    public com.google.protobuf.ByteString
        getIeeeAddressBytes() {
      java.lang.Object ref = ieeeAddress_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ieeeAddress_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 4;
    private java.lang.Object timestamp_;
    /**
     * <code>optional string timestamp = 4;</code>
     */
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string timestamp = 4;</code>
     */
    public java.lang.String getTimestamp() {
      java.lang.Object ref = timestamp_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          timestamp_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string timestamp = 4;</code>
     */
    public com.google.protobuf.ByteString
        getTimestampBytes() {
      java.lang.Object ref = timestamp_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        timestamp_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int RMS_V1_FIELD_NUMBER = 5;
    private int rmsV1_;
    /**
     * <code>optional int32 rms_V1 = 5;</code>
     */
    public boolean hasRmsV1() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 rms_V1 = 5;</code>
     */
    public int getRmsV1() {
      return rmsV1_;
    }

    public static final int RMS_I1_FIELD_NUMBER = 6;
    private float rmsI1_;
    /**
     * <code>optional float rms_I1 = 6;</code>
     */
    public boolean hasRmsI1() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional float rms_I1 = 6;</code>
     */
    public float getRmsI1() {
      return rmsI1_;
    }

    public static final int RMS_V2_FIELD_NUMBER = 7;
    private int rmsV2_;
    /**
     * <code>optional int32 rms_V2 = 7;</code>
     */
    public boolean hasRmsV2() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 rms_V2 = 7;</code>
     */
    public int getRmsV2() {
      return rmsV2_;
    }

    public static final int RMS_I2_FIELD_NUMBER = 8;
    private float rmsI2_;
    /**
     * <code>optional float rms_I2 = 8;</code>
     */
    public boolean hasRmsI2() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional float rms_I2 = 8;</code>
     */
    public float getRmsI2() {
      return rmsI2_;
    }

    public static final int RMS_V3_FIELD_NUMBER = 9;
    private int rmsV3_;
    /**
     * <code>optional int32 rms_V3 = 9;</code>
     */
    public boolean hasRmsV3() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 rms_V3 = 9;</code>
     */
    public int getRmsV3() {
      return rmsV3_;
    }

    public static final int RMS_I3_FIELD_NUMBER = 10;
    private float rmsI3_;
    /**
     * <code>optional float rms_I3 = 10;</code>
     */
    public boolean hasRmsI3() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional float rms_I3 = 10;</code>
     */
    public float getRmsI3() {
      return rmsI3_;
    }

    public static final int POWER_FIELD_NUMBER = 11;
    private float power_;
    /**
     * <code>optional float power = 11;</code>
     */
    public boolean hasPower() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional float power = 11;</code>
     */
    public float getPower() {
      return power_;
    }

    public static final int ACCUMULATED_ENERGY_FIELD_NUMBER = 12;
    private float accumulatedEnergy_;
    /**
     * <code>optional float accumulated_energy = 12;</code>
     */
    public boolean hasAccumulatedEnergy() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional float accumulated_energy = 12;</code>
     */
    public float getAccumulatedEnergy() {
      return accumulatedEnergy_;
    }

    public static final int STATUS_FIELD_NUMBER = 13;
    private int status_;
    /**
     * <code>optional int32 status = 13;</code>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional int32 status = 13;</code>
     */
    public int getStatus() {
      return status_;
    }

    public static final int THETA_1_FIELD_NUMBER = 17;
    private int theta1_;
    /**
     * <code>optional int32 theta_1 = 17;</code>
     */
    public boolean hasTheta1() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int32 theta_1 = 17;</code>
     */
    public int getTheta1() {
      return theta1_;
    }

    public static final int MAG_V1_FIELD_NUMBER = 18;
    private int magV1_;
    /**
     * <code>optional int32 mag_V1 = 18;</code>
     */
    public boolean hasMagV1() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional int32 mag_V1 = 18;</code>
     */
    public int getMagV1() {
      return magV1_;
    }

    public static final int MAG_I1_FIELD_NUMBER = 19;
    private int magI1_;
    /**
     * <code>optional int32 mag_I1 = 19;</code>
     */
    public boolean hasMagI1() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional int32 mag_I1 = 19;</code>
     */
    public int getMagI1() {
      return magI1_;
    }

    public static final int THETA_2_FIELD_NUMBER = 20;
    private int theta2_;
    /**
     * <code>optional int32 theta_2 = 20;</code>
     */
    public boolean hasTheta2() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional int32 theta_2 = 20;</code>
     */
    public int getTheta2() {
      return theta2_;
    }

    public static final int MAG_V2_FIELD_NUMBER = 21;
    private int magV2_;
    /**
     * <code>optional int32 mag_V2 = 21;</code>
     */
    public boolean hasMagV2() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional int32 mag_V2 = 21;</code>
     */
    public int getMagV2() {
      return magV2_;
    }

    public static final int MAG_I2_FIELD_NUMBER = 22;
    private int magI2_;
    /**
     * <code>optional int32 mag_I2 = 22;</code>
     */
    public boolean hasMagI2() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional int32 mag_I2 = 22;</code>
     */
    public int getMagI2() {
      return magI2_;
    }

    public static final int THETA_3_FIELD_NUMBER = 23;
    private int theta3_;
    /**
     * <code>optional int32 theta_3 = 23;</code>
     */
    public boolean hasTheta3() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional int32 theta_3 = 23;</code>
     */
    public int getTheta3() {
      return theta3_;
    }

    public static final int MAG_V3_FIELD_NUMBER = 24;
    private int magV3_;
    /**
     * <code>optional int32 mag_V3 = 24;</code>
     */
    public boolean hasMagV3() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional int32 mag_V3 = 24;</code>
     */
    public int getMagV3() {
      return magV3_;
    }

    public static final int MAG_I3_FIELD_NUMBER = 25;
    private int magI3_;
    /**
     * <code>optional int32 mag_I3 = 25;</code>
     */
    public boolean hasMagI3() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional int32 mag_I3 = 25;</code>
     */
    public int getMagI3() {
      return magI3_;
    }

    public static final int SM_V_FIELD_NUMBER = 26;
    private int smV_;
    /**
     * <code>optional int32 sm_V = 26;</code>
     */
    public boolean hasSmV() {
      return ((bitField0_ & 0x00400000) == 0x00400000);
    }
    /**
     * <code>optional int32 sm_V = 26;</code>
     */
    public int getSmV() {
      return smV_;
    }

    public static final int SM_I_FIELD_NUMBER = 27;
    private int smI_;
    /**
     * <code>optional int32 sm_I = 27;</code>
     */
    public boolean hasSmI() {
      return ((bitField0_ & 0x00800000) == 0x00800000);
    }
    /**
     * <code>optional int32 sm_I = 27;</code>
     */
    public int getSmI() {
      return smI_;
    }

    private void initFields() {
      id_ = 0;
      smIndex_ = 0;
      ieeeAddress_ = "";
      timestamp_ = "";
      rmsV1_ = 0;
      rmsI1_ = 0F;
      rmsV2_ = 0;
      rmsI2_ = 0F;
      rmsV3_ = 0;
      rmsI3_ = 0F;
      power_ = 0F;
      accumulatedEnergy_ = 0F;
      status_ = 0;
      theta1_ = 0;
      magV1_ = 0;
      magI1_ = 0;
      theta2_ = 0;
      magV2_ = 0;
      magI2_ = 0;
      theta3_ = 0;
      magV3_ = 0;
      magI3_ = 0;
      smV_ = 0;
      smI_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, smIndex_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getIeeeAddressBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getTimestampBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, rmsV1_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeFloat(6, rmsI1_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, rmsV2_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeFloat(8, rmsI2_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, rmsV3_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeFloat(10, rmsI3_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeFloat(11, power_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeFloat(12, accumulatedEnergy_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt32(13, status_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt32(17, theta1_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeInt32(18, magV1_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeInt32(19, magI1_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeInt32(20, theta2_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeInt32(21, magV2_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeInt32(22, magI2_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeInt32(23, theta3_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeInt32(24, magV3_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        output.writeInt32(25, magI3_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        output.writeInt32(26, smV_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        output.writeInt32(27, smI_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, smIndex_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getIeeeAddressBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getTimestampBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, rmsV1_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, rmsI1_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, rmsV2_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(8, rmsI2_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, rmsV3_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(10, rmsI3_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(11, power_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(12, accumulatedEnergy_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, status_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(17, theta1_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(18, magV1_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(19, magI1_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(20, theta2_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(21, magV2_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(22, magI2_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(23, theta3_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(24, magV3_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(25, magI3_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(26, smV_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(27, smI_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.itu.localserver.client.SmartMeterDataProtos.SmartMeter parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.itu.localserver.client.SmartMeterDataProtos.SmartMeter parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.itu.localserver.client.SmartMeterDataProtos.SmartMeter parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.itu.localserver.client.SmartMeterDataProtos.SmartMeter parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.itu.localserver.client.SmartMeterDataProtos.SmartMeter parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.itu.localserver.client.SmartMeterDataProtos.SmartMeter parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.itu.localserver.client.SmartMeterDataProtos.SmartMeter parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.itu.localserver.client.SmartMeterDataProtos.SmartMeter parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.itu.localserver.client.SmartMeterDataProtos.SmartMeter parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.itu.localserver.client.SmartMeterDataProtos.SmartMeter parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.itu.localserver.client.SmartMeterDataProtos.SmartMeter prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SmartMeter}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SmartMeter)
        com.itu.localserver.client.SmartMeterDataProtos.SmartMeterOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.itu.localserver.client.SmartMeterDataProtos.internal_static_SmartMeter_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.itu.localserver.client.SmartMeterDataProtos.internal_static_SmartMeter_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.itu.localserver.client.SmartMeterDataProtos.SmartMeter.class, com.itu.localserver.client.SmartMeterDataProtos.SmartMeter.Builder.class);
      }

      // Construct using com.itu.localserver.client.SmartMeterDataProtos.SmartMeter.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        smIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        ieeeAddress_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        timestamp_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        rmsV1_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        rmsI1_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000020);
        rmsV2_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        rmsI2_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000080);
        rmsV3_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        rmsI3_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000200);
        power_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000400);
        accumulatedEnergy_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000800);
        status_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        theta1_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        magV1_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        magI1_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        theta2_ = 0;
        bitField0_ = (bitField0_ & ~0x00010000);
        magV2_ = 0;
        bitField0_ = (bitField0_ & ~0x00020000);
        magI2_ = 0;
        bitField0_ = (bitField0_ & ~0x00040000);
        theta3_ = 0;
        bitField0_ = (bitField0_ & ~0x00080000);
        magV3_ = 0;
        bitField0_ = (bitField0_ & ~0x00100000);
        magI3_ = 0;
        bitField0_ = (bitField0_ & ~0x00200000);
        smV_ = 0;
        bitField0_ = (bitField0_ & ~0x00400000);
        smI_ = 0;
        bitField0_ = (bitField0_ & ~0x00800000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.itu.localserver.client.SmartMeterDataProtos.internal_static_SmartMeter_descriptor;
      }

      public com.itu.localserver.client.SmartMeterDataProtos.SmartMeter getDefaultInstanceForType() {
        return com.itu.localserver.client.SmartMeterDataProtos.SmartMeter.getDefaultInstance();
      }

      public com.itu.localserver.client.SmartMeterDataProtos.SmartMeter build() {
        com.itu.localserver.client.SmartMeterDataProtos.SmartMeter result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.itu.localserver.client.SmartMeterDataProtos.SmartMeter buildPartial() {
        com.itu.localserver.client.SmartMeterDataProtos.SmartMeter result = new com.itu.localserver.client.SmartMeterDataProtos.SmartMeter(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.smIndex_ = smIndex_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.ieeeAddress_ = ieeeAddress_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.timestamp_ = timestamp_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.rmsV1_ = rmsV1_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.rmsI1_ = rmsI1_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.rmsV2_ = rmsV2_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.rmsI2_ = rmsI2_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.rmsV3_ = rmsV3_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.rmsI3_ = rmsI3_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.power_ = power_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.accumulatedEnergy_ = accumulatedEnergy_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.theta1_ = theta1_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.magV1_ = magV1_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.magI1_ = magI1_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.theta2_ = theta2_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.magV2_ = magV2_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.magI2_ = magI2_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.theta3_ = theta3_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00100000;
        }
        result.magV3_ = magV3_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00200000;
        }
        result.magI3_ = magI3_;
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00400000;
        }
        result.smV_ = smV_;
        if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
          to_bitField0_ |= 0x00800000;
        }
        result.smI_ = smI_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.itu.localserver.client.SmartMeterDataProtos.SmartMeter) {
          return mergeFrom((com.itu.localserver.client.SmartMeterDataProtos.SmartMeter)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.itu.localserver.client.SmartMeterDataProtos.SmartMeter other) {
        if (other == com.itu.localserver.client.SmartMeterDataProtos.SmartMeter.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasSmIndex()) {
          setSmIndex(other.getSmIndex());
        }
        if (other.hasIeeeAddress()) {
          bitField0_ |= 0x00000004;
          ieeeAddress_ = other.ieeeAddress_;
          onChanged();
        }
        if (other.hasTimestamp()) {
          bitField0_ |= 0x00000008;
          timestamp_ = other.timestamp_;
          onChanged();
        }
        if (other.hasRmsV1()) {
          setRmsV1(other.getRmsV1());
        }
        if (other.hasRmsI1()) {
          setRmsI1(other.getRmsI1());
        }
        if (other.hasRmsV2()) {
          setRmsV2(other.getRmsV2());
        }
        if (other.hasRmsI2()) {
          setRmsI2(other.getRmsI2());
        }
        if (other.hasRmsV3()) {
          setRmsV3(other.getRmsV3());
        }
        if (other.hasRmsI3()) {
          setRmsI3(other.getRmsI3());
        }
        if (other.hasPower()) {
          setPower(other.getPower());
        }
        if (other.hasAccumulatedEnergy()) {
          setAccumulatedEnergy(other.getAccumulatedEnergy());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasTheta1()) {
          setTheta1(other.getTheta1());
        }
        if (other.hasMagV1()) {
          setMagV1(other.getMagV1());
        }
        if (other.hasMagI1()) {
          setMagI1(other.getMagI1());
        }
        if (other.hasTheta2()) {
          setTheta2(other.getTheta2());
        }
        if (other.hasMagV2()) {
          setMagV2(other.getMagV2());
        }
        if (other.hasMagI2()) {
          setMagI2(other.getMagI2());
        }
        if (other.hasTheta3()) {
          setTheta3(other.getTheta3());
        }
        if (other.hasMagV3()) {
          setMagV3(other.getMagV3());
        }
        if (other.hasMagI3()) {
          setMagI3(other.getMagI3());
        }
        if (other.hasSmV()) {
          setSmV(other.getSmV());
        }
        if (other.hasSmI()) {
          setSmI(other.getSmI());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.itu.localserver.client.SmartMeterDataProtos.SmartMeter parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.itu.localserver.client.SmartMeterDataProtos.SmartMeter) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int id_ ;
      /**
       * <code>optional int32 id = 1;</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 id = 1;</code>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>optional int32 id = 1;</code>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 id = 1;</code>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }

      private int smIndex_ ;
      /**
       * <code>optional int32 sm_index = 2;</code>
       */
      public boolean hasSmIndex() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 sm_index = 2;</code>
       */
      public int getSmIndex() {
        return smIndex_;
      }
      /**
       * <code>optional int32 sm_index = 2;</code>
       */
      public Builder setSmIndex(int value) {
        bitField0_ |= 0x00000002;
        smIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 sm_index = 2;</code>
       */
      public Builder clearSmIndex() {
        bitField0_ = (bitField0_ & ~0x00000002);
        smIndex_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object ieeeAddress_ = "";
      /**
       * <code>optional string ieeeAddress = 3;</code>
       */
      public boolean hasIeeeAddress() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string ieeeAddress = 3;</code>
       */
      public java.lang.String getIeeeAddress() {
        java.lang.Object ref = ieeeAddress_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            ieeeAddress_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string ieeeAddress = 3;</code>
       */
      public com.google.protobuf.ByteString
          getIeeeAddressBytes() {
        java.lang.Object ref = ieeeAddress_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ieeeAddress_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string ieeeAddress = 3;</code>
       */
      public Builder setIeeeAddress(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        ieeeAddress_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string ieeeAddress = 3;</code>
       */
      public Builder clearIeeeAddress() {
        bitField0_ = (bitField0_ & ~0x00000004);
        ieeeAddress_ = getDefaultInstance().getIeeeAddress();
        onChanged();
        return this;
      }
      /**
       * <code>optional string ieeeAddress = 3;</code>
       */
      public Builder setIeeeAddressBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        ieeeAddress_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object timestamp_ = "";
      /**
       * <code>optional string timestamp = 4;</code>
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string timestamp = 4;</code>
       */
      public java.lang.String getTimestamp() {
        java.lang.Object ref = timestamp_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            timestamp_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string timestamp = 4;</code>
       */
      public com.google.protobuf.ByteString
          getTimestampBytes() {
        java.lang.Object ref = timestamp_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          timestamp_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string timestamp = 4;</code>
       */
      public Builder setTimestamp(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string timestamp = 4;</code>
       */
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000008);
        timestamp_ = getDefaultInstance().getTimestamp();
        onChanged();
        return this;
      }
      /**
       * <code>optional string timestamp = 4;</code>
       */
      public Builder setTimestampBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        timestamp_ = value;
        onChanged();
        return this;
      }

      private int rmsV1_ ;
      /**
       * <code>optional int32 rms_V1 = 5;</code>
       */
      public boolean hasRmsV1() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 rms_V1 = 5;</code>
       */
      public int getRmsV1() {
        return rmsV1_;
      }
      /**
       * <code>optional int32 rms_V1 = 5;</code>
       */
      public Builder setRmsV1(int value) {
        bitField0_ |= 0x00000010;
        rmsV1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 rms_V1 = 5;</code>
       */
      public Builder clearRmsV1() {
        bitField0_ = (bitField0_ & ~0x00000010);
        rmsV1_ = 0;
        onChanged();
        return this;
      }

      private float rmsI1_ ;
      /**
       * <code>optional float rms_I1 = 6;</code>
       */
      public boolean hasRmsI1() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional float rms_I1 = 6;</code>
       */
      public float getRmsI1() {
        return rmsI1_;
      }
      /**
       * <code>optional float rms_I1 = 6;</code>
       */
      public Builder setRmsI1(float value) {
        bitField0_ |= 0x00000020;
        rmsI1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float rms_I1 = 6;</code>
       */
      public Builder clearRmsI1() {
        bitField0_ = (bitField0_ & ~0x00000020);
        rmsI1_ = 0F;
        onChanged();
        return this;
      }

      private int rmsV2_ ;
      /**
       * <code>optional int32 rms_V2 = 7;</code>
       */
      public boolean hasRmsV2() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 rms_V2 = 7;</code>
       */
      public int getRmsV2() {
        return rmsV2_;
      }
      /**
       * <code>optional int32 rms_V2 = 7;</code>
       */
      public Builder setRmsV2(int value) {
        bitField0_ |= 0x00000040;
        rmsV2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 rms_V2 = 7;</code>
       */
      public Builder clearRmsV2() {
        bitField0_ = (bitField0_ & ~0x00000040);
        rmsV2_ = 0;
        onChanged();
        return this;
      }

      private float rmsI2_ ;
      /**
       * <code>optional float rms_I2 = 8;</code>
       */
      public boolean hasRmsI2() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional float rms_I2 = 8;</code>
       */
      public float getRmsI2() {
        return rmsI2_;
      }
      /**
       * <code>optional float rms_I2 = 8;</code>
       */
      public Builder setRmsI2(float value) {
        bitField0_ |= 0x00000080;
        rmsI2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float rms_I2 = 8;</code>
       */
      public Builder clearRmsI2() {
        bitField0_ = (bitField0_ & ~0x00000080);
        rmsI2_ = 0F;
        onChanged();
        return this;
      }

      private int rmsV3_ ;
      /**
       * <code>optional int32 rms_V3 = 9;</code>
       */
      public boolean hasRmsV3() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 rms_V3 = 9;</code>
       */
      public int getRmsV3() {
        return rmsV3_;
      }
      /**
       * <code>optional int32 rms_V3 = 9;</code>
       */
      public Builder setRmsV3(int value) {
        bitField0_ |= 0x00000100;
        rmsV3_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 rms_V3 = 9;</code>
       */
      public Builder clearRmsV3() {
        bitField0_ = (bitField0_ & ~0x00000100);
        rmsV3_ = 0;
        onChanged();
        return this;
      }

      private float rmsI3_ ;
      /**
       * <code>optional float rms_I3 = 10;</code>
       */
      public boolean hasRmsI3() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional float rms_I3 = 10;</code>
       */
      public float getRmsI3() {
        return rmsI3_;
      }
      /**
       * <code>optional float rms_I3 = 10;</code>
       */
      public Builder setRmsI3(float value) {
        bitField0_ |= 0x00000200;
        rmsI3_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float rms_I3 = 10;</code>
       */
      public Builder clearRmsI3() {
        bitField0_ = (bitField0_ & ~0x00000200);
        rmsI3_ = 0F;
        onChanged();
        return this;
      }

      private float power_ ;
      /**
       * <code>optional float power = 11;</code>
       */
      public boolean hasPower() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional float power = 11;</code>
       */
      public float getPower() {
        return power_;
      }
      /**
       * <code>optional float power = 11;</code>
       */
      public Builder setPower(float value) {
        bitField0_ |= 0x00000400;
        power_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float power = 11;</code>
       */
      public Builder clearPower() {
        bitField0_ = (bitField0_ & ~0x00000400);
        power_ = 0F;
        onChanged();
        return this;
      }

      private float accumulatedEnergy_ ;
      /**
       * <code>optional float accumulated_energy = 12;</code>
       */
      public boolean hasAccumulatedEnergy() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional float accumulated_energy = 12;</code>
       */
      public float getAccumulatedEnergy() {
        return accumulatedEnergy_;
      }
      /**
       * <code>optional float accumulated_energy = 12;</code>
       */
      public Builder setAccumulatedEnergy(float value) {
        bitField0_ |= 0x00000800;
        accumulatedEnergy_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float accumulated_energy = 12;</code>
       */
      public Builder clearAccumulatedEnergy() {
        bitField0_ = (bitField0_ & ~0x00000800);
        accumulatedEnergy_ = 0F;
        onChanged();
        return this;
      }

      private int status_ ;
      /**
       * <code>optional int32 status = 13;</code>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int32 status = 13;</code>
       */
      public int getStatus() {
        return status_;
      }
      /**
       * <code>optional int32 status = 13;</code>
       */
      public Builder setStatus(int value) {
        bitField0_ |= 0x00001000;
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 status = 13;</code>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00001000);
        status_ = 0;
        onChanged();
        return this;
      }

      private int theta1_ ;
      /**
       * <code>optional int32 theta_1 = 17;</code>
       */
      public boolean hasTheta1() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int32 theta_1 = 17;</code>
       */
      public int getTheta1() {
        return theta1_;
      }
      /**
       * <code>optional int32 theta_1 = 17;</code>
       */
      public Builder setTheta1(int value) {
        bitField0_ |= 0x00002000;
        theta1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 theta_1 = 17;</code>
       */
      public Builder clearTheta1() {
        bitField0_ = (bitField0_ & ~0x00002000);
        theta1_ = 0;
        onChanged();
        return this;
      }

      private int magV1_ ;
      /**
       * <code>optional int32 mag_V1 = 18;</code>
       */
      public boolean hasMagV1() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional int32 mag_V1 = 18;</code>
       */
      public int getMagV1() {
        return magV1_;
      }
      /**
       * <code>optional int32 mag_V1 = 18;</code>
       */
      public Builder setMagV1(int value) {
        bitField0_ |= 0x00004000;
        magV1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 mag_V1 = 18;</code>
       */
      public Builder clearMagV1() {
        bitField0_ = (bitField0_ & ~0x00004000);
        magV1_ = 0;
        onChanged();
        return this;
      }

      private int magI1_ ;
      /**
       * <code>optional int32 mag_I1 = 19;</code>
       */
      public boolean hasMagI1() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional int32 mag_I1 = 19;</code>
       */
      public int getMagI1() {
        return magI1_;
      }
      /**
       * <code>optional int32 mag_I1 = 19;</code>
       */
      public Builder setMagI1(int value) {
        bitField0_ |= 0x00008000;
        magI1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 mag_I1 = 19;</code>
       */
      public Builder clearMagI1() {
        bitField0_ = (bitField0_ & ~0x00008000);
        magI1_ = 0;
        onChanged();
        return this;
      }

      private int theta2_ ;
      /**
       * <code>optional int32 theta_2 = 20;</code>
       */
      public boolean hasTheta2() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional int32 theta_2 = 20;</code>
       */
      public int getTheta2() {
        return theta2_;
      }
      /**
       * <code>optional int32 theta_2 = 20;</code>
       */
      public Builder setTheta2(int value) {
        bitField0_ |= 0x00010000;
        theta2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 theta_2 = 20;</code>
       */
      public Builder clearTheta2() {
        bitField0_ = (bitField0_ & ~0x00010000);
        theta2_ = 0;
        onChanged();
        return this;
      }

      private int magV2_ ;
      /**
       * <code>optional int32 mag_V2 = 21;</code>
       */
      public boolean hasMagV2() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional int32 mag_V2 = 21;</code>
       */
      public int getMagV2() {
        return magV2_;
      }
      /**
       * <code>optional int32 mag_V2 = 21;</code>
       */
      public Builder setMagV2(int value) {
        bitField0_ |= 0x00020000;
        magV2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 mag_V2 = 21;</code>
       */
      public Builder clearMagV2() {
        bitField0_ = (bitField0_ & ~0x00020000);
        magV2_ = 0;
        onChanged();
        return this;
      }

      private int magI2_ ;
      /**
       * <code>optional int32 mag_I2 = 22;</code>
       */
      public boolean hasMagI2() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional int32 mag_I2 = 22;</code>
       */
      public int getMagI2() {
        return magI2_;
      }
      /**
       * <code>optional int32 mag_I2 = 22;</code>
       */
      public Builder setMagI2(int value) {
        bitField0_ |= 0x00040000;
        magI2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 mag_I2 = 22;</code>
       */
      public Builder clearMagI2() {
        bitField0_ = (bitField0_ & ~0x00040000);
        magI2_ = 0;
        onChanged();
        return this;
      }

      private int theta3_ ;
      /**
       * <code>optional int32 theta_3 = 23;</code>
       */
      public boolean hasTheta3() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional int32 theta_3 = 23;</code>
       */
      public int getTheta3() {
        return theta3_;
      }
      /**
       * <code>optional int32 theta_3 = 23;</code>
       */
      public Builder setTheta3(int value) {
        bitField0_ |= 0x00080000;
        theta3_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 theta_3 = 23;</code>
       */
      public Builder clearTheta3() {
        bitField0_ = (bitField0_ & ~0x00080000);
        theta3_ = 0;
        onChanged();
        return this;
      }

      private int magV3_ ;
      /**
       * <code>optional int32 mag_V3 = 24;</code>
       */
      public boolean hasMagV3() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional int32 mag_V3 = 24;</code>
       */
      public int getMagV3() {
        return magV3_;
      }
      /**
       * <code>optional int32 mag_V3 = 24;</code>
       */
      public Builder setMagV3(int value) {
        bitField0_ |= 0x00100000;
        magV3_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 mag_V3 = 24;</code>
       */
      public Builder clearMagV3() {
        bitField0_ = (bitField0_ & ~0x00100000);
        magV3_ = 0;
        onChanged();
        return this;
      }

      private int magI3_ ;
      /**
       * <code>optional int32 mag_I3 = 25;</code>
       */
      public boolean hasMagI3() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional int32 mag_I3 = 25;</code>
       */
      public int getMagI3() {
        return magI3_;
      }
      /**
       * <code>optional int32 mag_I3 = 25;</code>
       */
      public Builder setMagI3(int value) {
        bitField0_ |= 0x00200000;
        magI3_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 mag_I3 = 25;</code>
       */
      public Builder clearMagI3() {
        bitField0_ = (bitField0_ & ~0x00200000);
        magI3_ = 0;
        onChanged();
        return this;
      }

      private int smV_ ;
      /**
       * <code>optional int32 sm_V = 26;</code>
       */
      public boolean hasSmV() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional int32 sm_V = 26;</code>
       */
      public int getSmV() {
        return smV_;
      }
      /**
       * <code>optional int32 sm_V = 26;</code>
       */
      public Builder setSmV(int value) {
        bitField0_ |= 0x00400000;
        smV_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 sm_V = 26;</code>
       */
      public Builder clearSmV() {
        bitField0_ = (bitField0_ & ~0x00400000);
        smV_ = 0;
        onChanged();
        return this;
      }

      private int smI_ ;
      /**
       * <code>optional int32 sm_I = 27;</code>
       */
      public boolean hasSmI() {
        return ((bitField0_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional int32 sm_I = 27;</code>
       */
      public int getSmI() {
        return smI_;
      }
      /**
       * <code>optional int32 sm_I = 27;</code>
       */
      public Builder setSmI(int value) {
        bitField0_ |= 0x00800000;
        smI_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 sm_I = 27;</code>
       */
      public Builder clearSmI() {
        bitField0_ = (bitField0_ & ~0x00800000);
        smI_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:SmartMeter)
    }

    static {
      defaultInstance = new SmartMeter(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:SmartMeter)
  }

  public interface SmartMeterDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SmartMeterData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .SmartMeter smart_meter = 1;</code>
     */
    java.util.List<com.itu.localserver.client.SmartMeterDataProtos.SmartMeter> 
        getSmartMeterList();
    /**
     * <code>repeated .SmartMeter smart_meter = 1;</code>
     */
    com.itu.localserver.client.SmartMeterDataProtos.SmartMeter getSmartMeter(int index);
    /**
     * <code>repeated .SmartMeter smart_meter = 1;</code>
     */
    int getSmartMeterCount();
    /**
     * <code>repeated .SmartMeter smart_meter = 1;</code>
     */
    java.util.List<? extends com.itu.localserver.client.SmartMeterDataProtos.SmartMeterOrBuilder> 
        getSmartMeterOrBuilderList();
    /**
     * <code>repeated .SmartMeter smart_meter = 1;</code>
     */
    com.itu.localserver.client.SmartMeterDataProtos.SmartMeterOrBuilder getSmartMeterOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code SmartMeterData}
   */
  public static final class SmartMeterData extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:SmartMeterData)
      SmartMeterDataOrBuilder {
    // Use SmartMeterData.newBuilder() to construct.
    private SmartMeterData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SmartMeterData(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SmartMeterData defaultInstance;
    public static SmartMeterData getDefaultInstance() {
      return defaultInstance;
    }

    public SmartMeterData getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SmartMeterData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                smartMeter_ = new java.util.ArrayList<com.itu.localserver.client.SmartMeterDataProtos.SmartMeter>();
                mutable_bitField0_ |= 0x00000001;
              }
              smartMeter_.add(input.readMessage(com.itu.localserver.client.SmartMeterDataProtos.SmartMeter.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          smartMeter_ = java.util.Collections.unmodifiableList(smartMeter_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.itu.localserver.client.SmartMeterDataProtos.internal_static_SmartMeterData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.itu.localserver.client.SmartMeterDataProtos.internal_static_SmartMeterData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.itu.localserver.client.SmartMeterDataProtos.SmartMeterData.class, com.itu.localserver.client.SmartMeterDataProtos.SmartMeterData.Builder.class);
    }

    public static com.google.protobuf.Parser<SmartMeterData> PARSER =
        new com.google.protobuf.AbstractParser<SmartMeterData>() {
      public SmartMeterData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SmartMeterData(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SmartMeterData> getParserForType() {
      return PARSER;
    }

    public static final int SMART_METER_FIELD_NUMBER = 1;
    private java.util.List<com.itu.localserver.client.SmartMeterDataProtos.SmartMeter> smartMeter_;
    /**
     * <code>repeated .SmartMeter smart_meter = 1;</code>
     */
    public java.util.List<com.itu.localserver.client.SmartMeterDataProtos.SmartMeter> getSmartMeterList() {
      return smartMeter_;
    }
    /**
     * <code>repeated .SmartMeter smart_meter = 1;</code>
     */
    public java.util.List<? extends com.itu.localserver.client.SmartMeterDataProtos.SmartMeterOrBuilder> 
        getSmartMeterOrBuilderList() {
      return smartMeter_;
    }
    /**
     * <code>repeated .SmartMeter smart_meter = 1;</code>
     */
    public int getSmartMeterCount() {
      return smartMeter_.size();
    }
    /**
     * <code>repeated .SmartMeter smart_meter = 1;</code>
     */
    public com.itu.localserver.client.SmartMeterDataProtos.SmartMeter getSmartMeter(int index) {
      return smartMeter_.get(index);
    }
    /**
     * <code>repeated .SmartMeter smart_meter = 1;</code>
     */
    public com.itu.localserver.client.SmartMeterDataProtos.SmartMeterOrBuilder getSmartMeterOrBuilder(
        int index) {
      return smartMeter_.get(index);
    }

    private void initFields() {
      smartMeter_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < smartMeter_.size(); i++) {
        output.writeMessage(1, smartMeter_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < smartMeter_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, smartMeter_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.itu.localserver.client.SmartMeterDataProtos.SmartMeterData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.itu.localserver.client.SmartMeterDataProtos.SmartMeterData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.itu.localserver.client.SmartMeterDataProtos.SmartMeterData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.itu.localserver.client.SmartMeterDataProtos.SmartMeterData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.itu.localserver.client.SmartMeterDataProtos.SmartMeterData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.itu.localserver.client.SmartMeterDataProtos.SmartMeterData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.itu.localserver.client.SmartMeterDataProtos.SmartMeterData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.itu.localserver.client.SmartMeterDataProtos.SmartMeterData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.itu.localserver.client.SmartMeterDataProtos.SmartMeterData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.itu.localserver.client.SmartMeterDataProtos.SmartMeterData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.itu.localserver.client.SmartMeterDataProtos.SmartMeterData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SmartMeterData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SmartMeterData)
        com.itu.localserver.client.SmartMeterDataProtos.SmartMeterDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.itu.localserver.client.SmartMeterDataProtos.internal_static_SmartMeterData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.itu.localserver.client.SmartMeterDataProtos.internal_static_SmartMeterData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.itu.localserver.client.SmartMeterDataProtos.SmartMeterData.class, com.itu.localserver.client.SmartMeterDataProtos.SmartMeterData.Builder.class);
      }

      // Construct using com.itu.localserver.client.SmartMeterDataProtos.SmartMeterData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSmartMeterFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (smartMeterBuilder_ == null) {
          smartMeter_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          smartMeterBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.itu.localserver.client.SmartMeterDataProtos.internal_static_SmartMeterData_descriptor;
      }

      public com.itu.localserver.client.SmartMeterDataProtos.SmartMeterData getDefaultInstanceForType() {
        return com.itu.localserver.client.SmartMeterDataProtos.SmartMeterData.getDefaultInstance();
      }

      public com.itu.localserver.client.SmartMeterDataProtos.SmartMeterData build() {
        com.itu.localserver.client.SmartMeterDataProtos.SmartMeterData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.itu.localserver.client.SmartMeterDataProtos.SmartMeterData buildPartial() {
        com.itu.localserver.client.SmartMeterDataProtos.SmartMeterData result = new com.itu.localserver.client.SmartMeterDataProtos.SmartMeterData(this);
        int from_bitField0_ = bitField0_;
        if (smartMeterBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            smartMeter_ = java.util.Collections.unmodifiableList(smartMeter_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.smartMeter_ = smartMeter_;
        } else {
          result.smartMeter_ = smartMeterBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.itu.localserver.client.SmartMeterDataProtos.SmartMeterData) {
          return mergeFrom((com.itu.localserver.client.SmartMeterDataProtos.SmartMeterData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.itu.localserver.client.SmartMeterDataProtos.SmartMeterData other) {
        if (other == com.itu.localserver.client.SmartMeterDataProtos.SmartMeterData.getDefaultInstance()) return this;
        if (smartMeterBuilder_ == null) {
          if (!other.smartMeter_.isEmpty()) {
            if (smartMeter_.isEmpty()) {
              smartMeter_ = other.smartMeter_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureSmartMeterIsMutable();
              smartMeter_.addAll(other.smartMeter_);
            }
            onChanged();
          }
        } else {
          if (!other.smartMeter_.isEmpty()) {
            if (smartMeterBuilder_.isEmpty()) {
              smartMeterBuilder_.dispose();
              smartMeterBuilder_ = null;
              smartMeter_ = other.smartMeter_;
              bitField0_ = (bitField0_ & ~0x00000001);
              smartMeterBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSmartMeterFieldBuilder() : null;
            } else {
              smartMeterBuilder_.addAllMessages(other.smartMeter_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.itu.localserver.client.SmartMeterDataProtos.SmartMeterData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.itu.localserver.client.SmartMeterDataProtos.SmartMeterData) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<com.itu.localserver.client.SmartMeterDataProtos.SmartMeter> smartMeter_ =
        java.util.Collections.emptyList();
      private void ensureSmartMeterIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          smartMeter_ = new java.util.ArrayList<com.itu.localserver.client.SmartMeterDataProtos.SmartMeter>(smartMeter_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.itu.localserver.client.SmartMeterDataProtos.SmartMeter, com.itu.localserver.client.SmartMeterDataProtos.SmartMeter.Builder, com.itu.localserver.client.SmartMeterDataProtos.SmartMeterOrBuilder> smartMeterBuilder_;

      /**
       * <code>repeated .SmartMeter smart_meter = 1;</code>
       */
      public java.util.List<com.itu.localserver.client.SmartMeterDataProtos.SmartMeter> getSmartMeterList() {
        if (smartMeterBuilder_ == null) {
          return java.util.Collections.unmodifiableList(smartMeter_);
        } else {
          return smartMeterBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .SmartMeter smart_meter = 1;</code>
       */
      public int getSmartMeterCount() {
        if (smartMeterBuilder_ == null) {
          return smartMeter_.size();
        } else {
          return smartMeterBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .SmartMeter smart_meter = 1;</code>
       */
      public com.itu.localserver.client.SmartMeterDataProtos.SmartMeter getSmartMeter(int index) {
        if (smartMeterBuilder_ == null) {
          return smartMeter_.get(index);
        } else {
          return smartMeterBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .SmartMeter smart_meter = 1;</code>
       */
      public Builder setSmartMeter(
          int index, com.itu.localserver.client.SmartMeterDataProtos.SmartMeter value) {
        if (smartMeterBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSmartMeterIsMutable();
          smartMeter_.set(index, value);
          onChanged();
        } else {
          smartMeterBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .SmartMeter smart_meter = 1;</code>
       */
      public Builder setSmartMeter(
          int index, com.itu.localserver.client.SmartMeterDataProtos.SmartMeter.Builder builderForValue) {
        if (smartMeterBuilder_ == null) {
          ensureSmartMeterIsMutable();
          smartMeter_.set(index, builderForValue.build());
          onChanged();
        } else {
          smartMeterBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .SmartMeter smart_meter = 1;</code>
       */
      public Builder addSmartMeter(com.itu.localserver.client.SmartMeterDataProtos.SmartMeter value) {
        if (smartMeterBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSmartMeterIsMutable();
          smartMeter_.add(value);
          onChanged();
        } else {
          smartMeterBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .SmartMeter smart_meter = 1;</code>
       */
      public Builder addSmartMeter(
          int index, com.itu.localserver.client.SmartMeterDataProtos.SmartMeter value) {
        if (smartMeterBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSmartMeterIsMutable();
          smartMeter_.add(index, value);
          onChanged();
        } else {
          smartMeterBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .SmartMeter smart_meter = 1;</code>
       */
      public Builder addSmartMeter(
          com.itu.localserver.client.SmartMeterDataProtos.SmartMeter.Builder builderForValue) {
        if (smartMeterBuilder_ == null) {
          ensureSmartMeterIsMutable();
          smartMeter_.add(builderForValue.build());
          onChanged();
        } else {
          smartMeterBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .SmartMeter smart_meter = 1;</code>
       */
      public Builder addSmartMeter(
          int index, com.itu.localserver.client.SmartMeterDataProtos.SmartMeter.Builder builderForValue) {
        if (smartMeterBuilder_ == null) {
          ensureSmartMeterIsMutable();
          smartMeter_.add(index, builderForValue.build());
          onChanged();
        } else {
          smartMeterBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .SmartMeter smart_meter = 1;</code>
       */
      public Builder addAllSmartMeter(
          java.lang.Iterable<? extends com.itu.localserver.client.SmartMeterDataProtos.SmartMeter> values) {
        if (smartMeterBuilder_ == null) {
          ensureSmartMeterIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, smartMeter_);
          onChanged();
        } else {
          smartMeterBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .SmartMeter smart_meter = 1;</code>
       */
      public Builder clearSmartMeter() {
        if (smartMeterBuilder_ == null) {
          smartMeter_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          smartMeterBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .SmartMeter smart_meter = 1;</code>
       */
      public Builder removeSmartMeter(int index) {
        if (smartMeterBuilder_ == null) {
          ensureSmartMeterIsMutable();
          smartMeter_.remove(index);
          onChanged();
        } else {
          smartMeterBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .SmartMeter smart_meter = 1;</code>
       */
      public com.itu.localserver.client.SmartMeterDataProtos.SmartMeter.Builder getSmartMeterBuilder(
          int index) {
        return getSmartMeterFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .SmartMeter smart_meter = 1;</code>
       */
      public com.itu.localserver.client.SmartMeterDataProtos.SmartMeterOrBuilder getSmartMeterOrBuilder(
          int index) {
        if (smartMeterBuilder_ == null) {
          return smartMeter_.get(index);  } else {
          return smartMeterBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .SmartMeter smart_meter = 1;</code>
       */
      public java.util.List<? extends com.itu.localserver.client.SmartMeterDataProtos.SmartMeterOrBuilder> 
           getSmartMeterOrBuilderList() {
        if (smartMeterBuilder_ != null) {
          return smartMeterBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(smartMeter_);
        }
      }
      /**
       * <code>repeated .SmartMeter smart_meter = 1;</code>
       */
      public com.itu.localserver.client.SmartMeterDataProtos.SmartMeter.Builder addSmartMeterBuilder() {
        return getSmartMeterFieldBuilder().addBuilder(
            com.itu.localserver.client.SmartMeterDataProtos.SmartMeter.getDefaultInstance());
      }
      /**
       * <code>repeated .SmartMeter smart_meter = 1;</code>
       */
      public com.itu.localserver.client.SmartMeterDataProtos.SmartMeter.Builder addSmartMeterBuilder(
          int index) {
        return getSmartMeterFieldBuilder().addBuilder(
            index, com.itu.localserver.client.SmartMeterDataProtos.SmartMeter.getDefaultInstance());
      }
      /**
       * <code>repeated .SmartMeter smart_meter = 1;</code>
       */
      public java.util.List<com.itu.localserver.client.SmartMeterDataProtos.SmartMeter.Builder> 
           getSmartMeterBuilderList() {
        return getSmartMeterFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.itu.localserver.client.SmartMeterDataProtos.SmartMeter, com.itu.localserver.client.SmartMeterDataProtos.SmartMeter.Builder, com.itu.localserver.client.SmartMeterDataProtos.SmartMeterOrBuilder> 
          getSmartMeterFieldBuilder() {
        if (smartMeterBuilder_ == null) {
          smartMeterBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.itu.localserver.client.SmartMeterDataProtos.SmartMeter, com.itu.localserver.client.SmartMeterDataProtos.SmartMeter.Builder, com.itu.localserver.client.SmartMeterDataProtos.SmartMeterOrBuilder>(
                  smartMeter_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          smartMeter_ = null;
        }
        return smartMeterBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:SmartMeterData)
    }

    static {
      defaultInstance = new SmartMeterData(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:SmartMeterData)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SmartMeter_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SmartMeter_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SmartMeterData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SmartMeterData_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n)src/main/resources/smart_meter_data.pr" +
      "oto\"\234\003\n\nSmartMeter\022\n\n\002id\030\001 \001(\005\022\020\n\010sm_ind" +
      "ex\030\002 \001(\005\022\023\n\013ieeeAddress\030\003 \001(\t\022\021\n\ttimesta" +
      "mp\030\004 \001(\t\022\016\n\006rms_V1\030\005 \001(\005\022\016\n\006rms_I1\030\006 \001(\002" +
      "\022\016\n\006rms_V2\030\007 \001(\005\022\016\n\006rms_I2\030\010 \001(\002\022\016\n\006rms_" +
      "V3\030\t \001(\005\022\016\n\006rms_I3\030\n \001(\002\022\r\n\005power\030\013 \001(\002\022" +
      "\032\n\022accumulated_energy\030\014 \001(\002\022\016\n\006status\030\r " +
      "\001(\005\022\017\n\007theta_1\030\021 \001(\005\022\016\n\006mag_V1\030\022 \001(\005\022\016\n\006" +
      "mag_I1\030\023 \001(\005\022\017\n\007theta_2\030\024 \001(\005\022\016\n\006mag_V2\030" +
      "\025 \001(\005\022\016\n\006mag_I2\030\026 \001(\005\022\017\n\007theta_3\030\027 \001(\005\022\016",
      "\n\006mag_V3\030\030 \001(\005\022\016\n\006mag_I3\030\031 \001(\005\022\014\n\004sm_V\030\032" +
      " \001(\005\022\014\n\004sm_I\030\033 \001(\005\"2\n\016SmartMeterData\022 \n\013" +
      "smart_meter\030\001 \003(\0132\013.SmartMeterB2\n\032com.it" +
      "u.localserver.clientB\024SmartMeterDataProt" +
      "os"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_SmartMeter_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_SmartMeter_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_SmartMeter_descriptor,
        new java.lang.String[] { "Id", "SmIndex", "IeeeAddress", "Timestamp", "RmsV1", "RmsI1", "RmsV2", "RmsI2", "RmsV3", "RmsI3", "Power", "AccumulatedEnergy", "Status", "Theta1", "MagV1", "MagI1", "Theta2", "MagV2", "MagI2", "Theta3", "MagV3", "MagI3", "SmV", "SmI", });
    internal_static_SmartMeterData_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_SmartMeterData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_SmartMeterData_descriptor,
        new java.lang.String[] { "SmartMeter", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
